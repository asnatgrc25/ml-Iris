# -*- coding: utf-8 -*-
"""Machine Learning in Iris Classification.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1R4UUL3LZwk7GYYE7rBCwGXl23mRnPX3P
"""

import pandas as pd
from sklearn import datasets

# Memuat dataset Iris dari scikit-learn
iris = datasets.load_iris()

X = iris.data    # inputan untuk machine learning
y = iris.target  # output yang dinginkan dari machine learning

# Mengonversi data fitur dan target menjadi DataFrame
df_X = pd.DataFrame(X, columns=iris.feature_names)
df_y = pd.Series(y, name='target')

df_X

df_y

# Gabungkan fitur dan target dalam satu DataFrame
df = pd.concat([df_X, df_y], axis=1)

df.head(10)

df.info()

df['target'].unique()

df.describe()

"""# 2. Split Data"""

from sklearn.model_selection import train_test_split
# Membagi data menjadi train dan test
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

round(150*0.2)

round(150*0.8)

"""# 3a. Train the Model Naive Bayes"""

from sklearn.metrics import accuracy_score, confusion_matrix
from sklearn.naive_bayes import GaussianNB
# Inisialisasi dan latih model Naïve Bayes
nb_model = GaussianNB()
nb_model.fit(X_train, y_train)

# Prediksi menggunakan Naïve Bayes
y_pred_nb = nb_model.predict(X_test)

# Evaluasi model Naïve Bayes
accuracy_nb = accuracy_score(y_test, y_pred_nb)
print(f"Accuracy Naïve Bayes: {accuracy_nb:.2f}")

import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split


# Memuat dataset Iris
# Membuat confusion matrix untuk kedua model
cm_nb = confusion_matrix(y_test, y_pred_nb)

# Plot Confusion Matrix untuk Naïve Bayes
plt.figure(figsize=(12, 5))

plt.subplot(1, 2, 1)
sns.heatmap(cm_nb, annot=True, fmt='d', cmap='Blues', xticklabels=iris.target_names, yticklabels=iris.target_names)
plt.xlabel("Predicted")
plt.ylabel("Actual")
plt.title("Confusion Matrix - Naïve Bayes")

from sklearn.ensemble import RandomForestClassifier
# Inisialisasi dan latih model Random Forest
rf_model = RandomForestClassifier(n_estimators=100, random_state=42)
rf_model.fit(X_train, y_train)

# Prediksi menggunakan Random Forest
y_pred_rf = rf_model.predict(X_test)

# Evaluasi model Random Forest
accuracy_rf = accuracy_score(y_test, y_pred_rf)
print(f"Accuracy Random Forest: {accuracy_rf:.2f}")

cm_rf = confusion_matrix(y_test, y_pred_rf)
# Plot Confusion Matrix untuk Random Forest
plt.subplot(1, 2, 2)
sns.heatmap(cm_rf, annot=True, fmt='d', cmap='Greens', xticklabels=iris.target_names, yticklabels=iris.target_names)
plt.xlabel("Predicted")
plt.ylabel("Actual")
plt.title("Confusion Matrix - Random Forest")

plt.show()

if accuracy_rf > accuracy_nb:
    print("🎯 Model Random Forest lebih akurat dibandingkan Naïve Bayes.")
elif accuracy_nb > accuracy_rf:
    print("🎯 Model Naïve Bayes lebih akurat dibandingkan Random Forest.")
else:
    print("🎯 Kedua model memiliki akurasi yang sama.")